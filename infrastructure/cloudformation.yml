AWSTemplateFormatVersion: '2010-09-09'

Resources:

  MyCinemaS3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref S3BucketName
    DeletionPolicy: Delete

  MyCinemaRDSInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBInstanceClass: db.t4g.micro
      Engine: postgres
      MasterUsername: !Ref DbUser
      MasterUserPassword: !Ref DbPassword
      DBName: !Ref DbName
      PubliclyAccessible: false
      AllocatedStorage: 20
    DeletionPolicy: Retain

  MyCinemaElasticBeanstalkApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: MyCinema
      Description: "Application for MyCinema"

  MyCinemaInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: "/"
      Roles:
        - !Ref MyCinemaElasticBeanstalkEC2Role

  MyCinemaElasticBeanstalkEC2Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker

  MyCinemaBackendEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      EnvironmentName: MyCinemaBackend
      ApplicationName: !Ref MyCinemaElasticBeanstalkApplication
      SolutionStackName: "64bit Amazon Linux 2023 v4.3.2 running Corretto 21"
      OptionSettings:
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: InstanceType
          Value: t2.micro
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: S3_BUCKET
          Value: !Ref MyCinemaS3Bucket
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: DB_HOST
          Value: !GetAtt MyCinemaRDSInstance.Endpoint.Address
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !Ref MyCinemaInstanceProfile

  MyCinemaFrontendEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      EnvironmentName: MyCinemaFrontend
      ApplicationName: !Ref MyCinemaElasticBeanstalkApplication
      SolutionStackName: "64bit Amazon Linux 2 v5.9.7 running Node.js 18"
      OptionSettings:
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: InstanceType
          Value: t3.small
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: S3_BUCKET
          Value: !Ref MyCinemaS3Bucket
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !Ref MyCinemaInstanceProfile

Parameters:

  S3BucketName:
    Type: String
    Description: The name of the S3 bucket

  DbUser:
    Type: String
    Description: The user of the RDS database

  DbPassword:
    Type: String
    Description: The password of the RDS database
    NoEcho: true

  DbName:
    Type: String
    Description: The name of the RDS database

Outputs:

  S3Bucket:
    Description: The name of the S3 bucket
    Value: !Ref MyCinemaS3Bucket

  RDSInstanceEndpoint:
    Description: The endpoint address of the RDS instance
    Value: !GetAtt MyCinemaRDSInstance.Endpoint.Address

  BackendEnvironmentURL:
    Description: The URL of the MyCinemaBackend environment
    Value: !GetAtt MyCinemaBackendEnvironment.EndpointURL

  FrontendEnvironmentURL:
    Description: The URL of the MyCinemaFrontend environment
    Value: !GetAtt MyCinemaFrontendEnvironment.EndpointURL